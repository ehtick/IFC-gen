//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/dev/Hypar/IFC-gen/grammar/Express.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Express {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IExpressListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ExpressBaseListener : IExpressListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.actualParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActualParams([NotNull] ExpressParser.ActualParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.actualParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActualParams([NotNull] ExpressParser.ActualParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.aggregateExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregateExpr([NotNull] ExpressParser.AggregateExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.aggregateExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregateExpr([NotNull] ExpressParser.AggregateExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.aggregateLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregateLiteral([NotNull] ExpressParser.AggregateLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.aggregateLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregateLiteral([NotNull] ExpressParser.AggregateLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.aggregateType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregateType([NotNull] ExpressParser.AggregateTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.aggregateType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregateType([NotNull] ExpressParser.AggregateTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.aliasDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAliasDef([NotNull] ExpressParser.AliasDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.aliasDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAliasDef([NotNull] ExpressParser.AliasDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.aliasRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAliasRef([NotNull] ExpressParser.AliasRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.aliasRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAliasRef([NotNull] ExpressParser.AliasRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.aliasStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAliasStmt([NotNull] ExpressParser.AliasStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.aliasStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAliasStmt([NotNull] ExpressParser.AliasStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.allTypeSel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAllTypeSel([NotNull] ExpressParser.AllTypeSelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.allTypeSel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAllTypeSel([NotNull] ExpressParser.AllTypeSelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayType([NotNull] ExpressParser.ArrayTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayType([NotNull] ExpressParser.ArrayTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.assignmentStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentStmt([NotNull] ExpressParser.AssignmentStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.assignmentStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentStmt([NotNull] ExpressParser.AssignmentStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.attrDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttrDef([NotNull] ExpressParser.AttrDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.attrDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttrDef([NotNull] ExpressParser.AttrDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.attributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributes([NotNull] ExpressParser.AttributesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.attributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributes([NotNull] ExpressParser.AttributesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.attrRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttrRef([NotNull] ExpressParser.AttrRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.attrRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttrRef([NotNull] ExpressParser.AttrRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.bagType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBagType([NotNull] ExpressParser.BagTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.bagType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBagType([NotNull] ExpressParser.BagTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.binaryType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryType([NotNull] ExpressParser.BinaryTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.binaryType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryType([NotNull] ExpressParser.BinaryTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.booleanType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanType([NotNull] ExpressParser.BooleanTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.booleanType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanType([NotNull] ExpressParser.BooleanTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.bound1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBound1([NotNull] ExpressParser.Bound1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.bound1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBound1([NotNull] ExpressParser.Bound1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.bound2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBound2([NotNull] ExpressParser.Bound2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.bound2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBound2([NotNull] ExpressParser.Bound2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.boundSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoundSpec([NotNull] ExpressParser.BoundSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.boundSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoundSpec([NotNull] ExpressParser.BoundSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.caseAction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseAction([NotNull] ExpressParser.CaseActionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.caseAction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseAction([NotNull] ExpressParser.CaseActionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.caseBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseBody([NotNull] ExpressParser.CaseBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.caseBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseBody([NotNull] ExpressParser.CaseBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.caseLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseLabel([NotNull] ExpressParser.CaseLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.caseLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseLabel([NotNull] ExpressParser.CaseLabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.caseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseStmt([NotNull] ExpressParser.CaseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.caseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseStmt([NotNull] ExpressParser.CaseStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.choice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChoice([NotNull] ExpressParser.ChoiceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.choice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChoice([NotNull] ExpressParser.ChoiceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.collectionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollectionType([NotNull] ExpressParser.CollectionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.collectionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollectionType([NotNull] ExpressParser.CollectionTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.collectionTypeSel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollectionTypeSel([NotNull] ExpressParser.CollectionTypeSelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.collectionTypeSel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollectionTypeSel([NotNull] ExpressParser.CollectionTypeSelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.compoundStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompoundStmt([NotNull] ExpressParser.CompoundStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.compoundStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompoundStmt([NotNull] ExpressParser.CompoundStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.conformantArray"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConformantArray([NotNull] ExpressParser.ConformantArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.conformantArray"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConformantArray([NotNull] ExpressParser.ConformantArrayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.conformantBag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConformantBag([NotNull] ExpressParser.ConformantBagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.conformantBag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConformantBag([NotNull] ExpressParser.ConformantBagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.conformantList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConformantList([NotNull] ExpressParser.ConformantListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.conformantList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConformantList([NotNull] ExpressParser.ConformantListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.conformantSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConformantSet([NotNull] ExpressParser.ConformantSetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.conformantSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConformantSet([NotNull] ExpressParser.ConformantSetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.conformantType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConformantType([NotNull] ExpressParser.ConformantTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.conformantType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConformantType([NotNull] ExpressParser.ConformantTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.constantDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantDecl([NotNull] ExpressParser.ConstantDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.constantDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantDecl([NotNull] ExpressParser.ConstantDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.constantRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantRef([NotNull] ExpressParser.ConstantRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.constantRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantRef([NotNull] ExpressParser.ConstantRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.constBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstBody([NotNull] ExpressParser.ConstBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.constBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstBody([NotNull] ExpressParser.ConstBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.constDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstDef([NotNull] ExpressParser.ConstDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.constDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstDef([NotNull] ExpressParser.ConstDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.constRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstRef([NotNull] ExpressParser.ConstRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.constRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstRef([NotNull] ExpressParser.ConstRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] ExpressParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] ExpressParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.deriveClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeriveClause([NotNull] ExpressParser.DeriveClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.deriveClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeriveClause([NotNull] ExpressParser.DeriveClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.deriveDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeriveDef([NotNull] ExpressParser.DeriveDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.deriveDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeriveDef([NotNull] ExpressParser.DeriveDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.derivedAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDerivedAttr([NotNull] ExpressParser.DerivedAttrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.derivedAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDerivedAttr([NotNull] ExpressParser.DerivedAttrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.derivedRedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDerivedRedef([NotNull] ExpressParser.DerivedRedefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.derivedRedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDerivedRedef([NotNull] ExpressParser.DerivedRedefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.derivedPath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDerivedPath([NotNull] ExpressParser.DerivedPathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.derivedPath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDerivedPath([NotNull] ExpressParser.DerivedPathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.domainRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDomainRule([NotNull] ExpressParser.DomainRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.domainRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDomainRule([NotNull] ExpressParser.DomainRuleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.domainRules"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDomainRules([NotNull] ExpressParser.DomainRulesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.domainRules"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDomainRules([NotNull] ExpressParser.DomainRulesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement([NotNull] ExpressParser.ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement([NotNull] ExpressParser.ElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.embeddedRemark"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbeddedRemark([NotNull] ExpressParser.EmbeddedRemarkContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.embeddedRemark"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbeddedRemark([NotNull] ExpressParser.EmbeddedRemarkContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.entityBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntityBody([NotNull] ExpressParser.EntityBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.entityBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntityBody([NotNull] ExpressParser.EntityBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.entityDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntityDecl([NotNull] ExpressParser.EntityDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.entityDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntityDecl([NotNull] ExpressParser.EntityDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.entityDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntityDef([NotNull] ExpressParser.EntityDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.entityDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntityDef([NotNull] ExpressParser.EntityDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.entityHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntityHead([NotNull] ExpressParser.EntityHeadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.entityHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntityHead([NotNull] ExpressParser.EntityHeadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.entityLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntityLiteral([NotNull] ExpressParser.EntityLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.entityLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntityLiteral([NotNull] ExpressParser.EntityLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.entityRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntityRef([NotNull] ExpressParser.EntityRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.entityRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntityRef([NotNull] ExpressParser.EntityRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.enumDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDef([NotNull] ExpressParser.EnumDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.enumDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDef([NotNull] ExpressParser.EnumDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.enumRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumRef([NotNull] ExpressParser.EnumRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.enumRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumRef([NotNull] ExpressParser.EnumRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.enumType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumType([NotNull] ExpressParser.EnumTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.enumType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumType([NotNull] ExpressParser.EnumTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.enumValues"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumValues([NotNull] ExpressParser.EnumValuesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.enumValues"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumValues([NotNull] ExpressParser.EnumValuesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.escapeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEscapeStmt([NotNull] ExpressParser.EscapeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.escapeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEscapeStmt([NotNull] ExpressParser.EscapeStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.explDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplDef([NotNull] ExpressParser.ExplDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.explDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplDef([NotNull] ExpressParser.ExplDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.explicitClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitClause([NotNull] ExpressParser.ExplicitClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.explicitClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitClause([NotNull] ExpressParser.ExplicitClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.explRedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplRedef([NotNull] ExpressParser.ExplRedefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.explRedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplRedef([NotNull] ExpressParser.ExplRedefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] ExpressParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] ExpressParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] ExpressParser.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] ExpressParser.FactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.formalParam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParam([NotNull] ExpressParser.FormalParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.formalParam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParam([NotNull] ExpressParser.FormalParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.formalParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParams([NotNull] ExpressParser.FormalParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.formalParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParams([NotNull] ExpressParser.FormalParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.funcDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncDef([NotNull] ExpressParser.FuncDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.funcDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncDef([NotNull] ExpressParser.FuncDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.funcHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncHead([NotNull] ExpressParser.FuncHeadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.funcHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncHead([NotNull] ExpressParser.FuncHeadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.returnTypeChoice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnTypeChoice([NotNull] ExpressParser.ReturnTypeChoiceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.returnTypeChoice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnTypeChoice([NotNull] ExpressParser.ReturnTypeChoiceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.funcRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncRef([NotNull] ExpressParser.FuncRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.funcRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncRef([NotNull] ExpressParser.FuncRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDecl([NotNull] ExpressParser.FunctionDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDecl([NotNull] ExpressParser.FunctionDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.genericType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericType([NotNull] ExpressParser.GenericTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.genericType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericType([NotNull] ExpressParser.GenericTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStmt([NotNull] ExpressParser.IfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStmt([NotNull] ExpressParser.IfStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.importEntity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportEntity([NotNull] ExpressParser.ImportEntityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.importEntity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportEntity([NotNull] ExpressParser.ImportEntityContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.importItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportItem([NotNull] ExpressParser.ImportItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.importItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportItem([NotNull] ExpressParser.ImportItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.importList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportList([NotNull] ExpressParser.ImportListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.importList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportList([NotNull] ExpressParser.ImportListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.importRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportRef([NotNull] ExpressParser.ImportRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.importRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportRef([NotNull] ExpressParser.ImportRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.incr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncr([NotNull] ExpressParser.IncrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.incr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncr([NotNull] ExpressParser.IncrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.incrementControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncrementControl([NotNull] ExpressParser.IncrementControlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.incrementControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncrementControl([NotNull] ExpressParser.IncrementControlContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInit([NotNull] ExpressParser.InitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInit([NotNull] ExpressParser.InitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.integerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerType([NotNull] ExpressParser.IntegerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.integerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerType([NotNull] ExpressParser.IntegerTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.interfaceSpecification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceSpecification([NotNull] ExpressParser.InterfaceSpecificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.interfaceSpecification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceSpecification([NotNull] ExpressParser.InterfaceSpecificationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.interval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterval([NotNull] ExpressParser.IntervalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.interval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterval([NotNull] ExpressParser.IntervalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.inverseAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInverseAttr([NotNull] ExpressParser.InverseAttrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.inverseAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInverseAttr([NotNull] ExpressParser.InverseAttrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.inverseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInverseClause([NotNull] ExpressParser.InverseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.inverseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInverseClause([NotNull] ExpressParser.InverseClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.inverseDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInverseDef([NotNull] ExpressParser.InverseDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.inverseDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInverseDef([NotNull] ExpressParser.InverseDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.inverseRedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInverseRedef([NotNull] ExpressParser.InverseRedefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.inverseRedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInverseRedef([NotNull] ExpressParser.InverseRedefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.inverseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInverseType([NotNull] ExpressParser.InverseTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.inverseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInverseType([NotNull] ExpressParser.InverseTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.labelDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabelDef([NotNull] ExpressParser.LabelDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.labelDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabelDef([NotNull] ExpressParser.LabelDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.listType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListType([NotNull] ExpressParser.ListTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.listType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListType([NotNull] ExpressParser.ListTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] ExpressParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] ExpressParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.localDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalDecl([NotNull] ExpressParser.LocalDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.localDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalDecl([NotNull] ExpressParser.LocalDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.localRules"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalRules([NotNull] ExpressParser.LocalRulesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.localRules"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalRules([NotNull] ExpressParser.LocalRulesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.localVar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalVar([NotNull] ExpressParser.LocalVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.localVar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalVar([NotNull] ExpressParser.LocalVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.logicalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalExpr([NotNull] ExpressParser.LogicalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.logicalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalExpr([NotNull] ExpressParser.LogicalExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.logicalType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalType([NotNull] ExpressParser.LogicalTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.logicalType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalType([NotNull] ExpressParser.LogicalTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.namedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedType([NotNull] ExpressParser.NamedTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.namedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedType([NotNull] ExpressParser.NamedTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.nullStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullStmt([NotNull] ExpressParser.NullStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.nullStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullStmt([NotNull] ExpressParser.NullStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.numberExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberExpr([NotNull] ExpressParser.NumberExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.numberExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberExpr([NotNull] ExpressParser.NumberExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.numberType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberType([NotNull] ExpressParser.NumberTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.numberType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberType([NotNull] ExpressParser.NumberTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.otherAction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOtherAction([NotNull] ExpressParser.OtherActionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.otherAction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOtherAction([NotNull] ExpressParser.OtherActionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.paramDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamDef([NotNull] ExpressParser.ParamDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.paramDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamDef([NotNull] ExpressParser.ParamDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] ExpressParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] ExpressParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.paramRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamRef([NotNull] ExpressParser.ParamRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.paramRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamRef([NotNull] ExpressParser.ParamRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.precisionSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrecisionSpec([NotNull] ExpressParser.PrecisionSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.precisionSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrecisionSpec([NotNull] ExpressParser.PrecisionSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.procCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcCallStmt([NotNull] ExpressParser.ProcCallStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.procCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcCallStmt([NotNull] ExpressParser.ProcCallStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.procDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcDef([NotNull] ExpressParser.ProcDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.procDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcDef([NotNull] ExpressParser.ProcDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.procedureDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureDecl([NotNull] ExpressParser.ProcedureDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.procedureDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureDecl([NotNull] ExpressParser.ProcedureDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.procHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcHead([NotNull] ExpressParser.ProcHeadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.procHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcHead([NotNull] ExpressParser.ProcHeadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.procRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcRef([NotNull] ExpressParser.ProcRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.procRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcRef([NotNull] ExpressParser.ProcRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.prolog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProlog([NotNull] ExpressParser.PrologContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.prolog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProlog([NotNull] ExpressParser.PrologContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.pseudoType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPseudoType([NotNull] ExpressParser.PseudoTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.pseudoType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPseudoType([NotNull] ExpressParser.PseudoTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.qualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifier([NotNull] ExpressParser.QualifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.qualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifier([NotNull] ExpressParser.QualifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.queryAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryAssignment([NotNull] ExpressParser.QueryAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.queryAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryAssignment([NotNull] ExpressParser.QueryAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.queryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryExpr([NotNull] ExpressParser.QueryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.queryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryExpr([NotNull] ExpressParser.QueryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.queryScan"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryScan([NotNull] ExpressParser.QueryScanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.queryScan"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryScan([NotNull] ExpressParser.QueryScanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.realType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRealType([NotNull] ExpressParser.RealTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.realType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRealType([NotNull] ExpressParser.RealTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.referenceClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferenceClause([NotNull] ExpressParser.ReferenceClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.referenceClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferenceClause([NotNull] ExpressParser.ReferenceClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.referencedAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferencedAttr([NotNull] ExpressParser.ReferencedAttrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.referencedAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferencedAttr([NotNull] ExpressParser.ReferencedAttrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.remark"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRemark([NotNull] ExpressParser.RemarkContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.remark"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRemark([NotNull] ExpressParser.RemarkContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.remarkStuff"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRemarkStuff([NotNull] ExpressParser.RemarkStuffContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.remarkStuff"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRemarkStuff([NotNull] ExpressParser.RemarkStuffContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.repeatControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatControl([NotNull] ExpressParser.RepeatControlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.repeatControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatControl([NotNull] ExpressParser.RepeatControlContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.repeateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeateStmt([NotNull] ExpressParser.RepeateStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.repeateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeateStmt([NotNull] ExpressParser.RepeateStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.repetition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepetition([NotNull] ExpressParser.RepetitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.repetition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepetition([NotNull] ExpressParser.RepetitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] ExpressParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] ExpressParser.ReturnStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.ruleDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleDecl([NotNull] ExpressParser.RuleDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.ruleDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleDecl([NotNull] ExpressParser.RuleDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.ruleDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleDef([NotNull] ExpressParser.RuleDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.ruleDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleDef([NotNull] ExpressParser.RuleDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.ruleHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleHead([NotNull] ExpressParser.RuleHeadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.ruleHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleHead([NotNull] ExpressParser.RuleHeadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.ruleList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleList([NotNull] ExpressParser.RuleListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.ruleList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleList([NotNull] ExpressParser.RuleListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.schemaBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSchemaBody([NotNull] ExpressParser.SchemaBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.schemaBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSchemaBody([NotNull] ExpressParser.SchemaBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.schemaDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSchemaDecl([NotNull] ExpressParser.SchemaDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.schemaDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSchemaDecl([NotNull] ExpressParser.SchemaDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.schemaRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSchemaRef([NotNull] ExpressParser.SchemaRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.schemaRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSchemaRef([NotNull] ExpressParser.SchemaRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelector([NotNull] ExpressParser.SelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelector([NotNull] ExpressParser.SelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.selectType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectType([NotNull] ExpressParser.SelectTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.selectType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectType([NotNull] ExpressParser.SelectTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.selectValues"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectValues([NotNull] ExpressParser.SelectValuesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.selectValues"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectValues([NotNull] ExpressParser.SelectValuesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.setType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetType([NotNull] ExpressParser.SetTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.setType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetType([NotNull] ExpressParser.SetTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.simpleExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleExpr([NotNull] ExpressParser.SimpleExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.simpleExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleExpr([NotNull] ExpressParser.SimpleExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.simpleFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleFactor([NotNull] ExpressParser.SimpleFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.simpleFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleFactor([NotNull] ExpressParser.SimpleFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.simpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleType([NotNull] ExpressParser.SimpleTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.simpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleType([NotNull] ExpressParser.SimpleTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.skipStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkipStmt([NotNull] ExpressParser.SkipStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.skipStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkipStmt([NotNull] ExpressParser.SkipStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.stdConst"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStdConst([NotNull] ExpressParser.StdConstContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.stdConst"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStdConst([NotNull] ExpressParser.StdConstContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.stdFunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStdFunc([NotNull] ExpressParser.StdFuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.stdFunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStdFunc([NotNull] ExpressParser.StdFuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.stdProc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStdProc([NotNull] ExpressParser.StdProcContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.stdProc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStdProc([NotNull] ExpressParser.StdProcContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] ExpressParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] ExpressParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmts([NotNull] ExpressParser.StmtsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmts([NotNull] ExpressParser.StmtsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.stringType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringType([NotNull] ExpressParser.StringTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.stringType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringType([NotNull] ExpressParser.StringTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.subSuper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubSuper([NotNull] ExpressParser.SubSuperContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.subSuper"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubSuper([NotNull] ExpressParser.SubSuperContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript([NotNull] ExpressParser.SubscriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript([NotNull] ExpressParser.SubscriptContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.subtypeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtypeDecl([NotNull] ExpressParser.SubtypeDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.subtypeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtypeDecl([NotNull] ExpressParser.SubtypeDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.supertypeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSupertypeDecl([NotNull] ExpressParser.SupertypeDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.supertypeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSupertypeDecl([NotNull] ExpressParser.SupertypeDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.supertypeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSupertypeExpr([NotNull] ExpressParser.SupertypeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.supertypeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSupertypeExpr([NotNull] ExpressParser.SupertypeExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.supertypeFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSupertypeFactor([NotNull] ExpressParser.SupertypeFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.supertypeFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSupertypeFactor([NotNull] ExpressParser.SupertypeFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.tailRemark"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTailRemark([NotNull] ExpressParser.TailRemarkContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.tailRemark"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTailRemark([NotNull] ExpressParser.TailRemarkContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] ExpressParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] ExpressParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.typeBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeBody([NotNull] ExpressParser.TypeBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.typeBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeBody([NotNull] ExpressParser.TypeBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.typeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDecl([NotNull] ExpressParser.TypeDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.typeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDecl([NotNull] ExpressParser.TypeDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.typeDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDef([NotNull] ExpressParser.TypeDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.typeDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDef([NotNull] ExpressParser.TypeDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.typeLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeLabel([NotNull] ExpressParser.TypeLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.typeLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeLabel([NotNull] ExpressParser.TypeLabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.typeRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeRef([NotNull] ExpressParser.TypeRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.typeRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeRef([NotNull] ExpressParser.TypeRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.typeSel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSel([NotNull] ExpressParser.TypeSelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.typeSel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSel([NotNull] ExpressParser.TypeSelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.unaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOp([NotNull] ExpressParser.UnaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.unaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOp([NotNull] ExpressParser.UnaryOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.uniqueRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniqueRule([NotNull] ExpressParser.UniqueRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.uniqueRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniqueRule([NotNull] ExpressParser.UniqueRuleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.uniqueRules"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniqueRules([NotNull] ExpressParser.UniqueRulesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.uniqueRules"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniqueRules([NotNull] ExpressParser.UniqueRulesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.untilControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUntilControl([NotNull] ExpressParser.UntilControlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.untilControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUntilControl([NotNull] ExpressParser.UntilControlContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.useClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseClause([NotNull] ExpressParser.UseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.useClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseClause([NotNull] ExpressParser.UseClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.useList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseList([NotNull] ExpressParser.UseListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.useList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseList([NotNull] ExpressParser.UseListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.varDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDef([NotNull] ExpressParser.VarDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.varDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDef([NotNull] ExpressParser.VarDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.varParam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarParam([NotNull] ExpressParser.VarParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.varParam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarParam([NotNull] ExpressParser.VarParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.varParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarParams([NotNull] ExpressParser.VarParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.varParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarParams([NotNull] ExpressParser.VarParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.varRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarRef([NotNull] ExpressParser.VarRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.varRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarRef([NotNull] ExpressParser.VarRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.whileControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileControl([NotNull] ExpressParser.WhileControlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.whileControl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileControl([NotNull] ExpressParser.WhileControlContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.width"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWidth([NotNull] ExpressParser.WidthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.width"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWidth([NotNull] ExpressParser.WidthContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Express
